from __future__ import division
import time
import sys
import numpy as np
from decimal import *
import time
import decimal
def napierian_base(number,show=True,la=100,save=False):
        tmp = 1
        e = 1
        n = 0
        decimal.getcontext().prec = number
        time1 = time.time()
        for i in range(1,number+1):
            time2 = time.time()
            tmp = Decimal(tmp)*Decimal(i)
            e = Decimal(e)+Decimal(1)/Decimal(tmp)
            if e == n:
                break
            n = e
            if show:
                j = int((i+1)/(number)*la)*"█"
                jx = (la - int((i+1)/(number)*la))*"░"
                sys.stdout.write(f"\r第{i}次 共{number}次 {j}{jx}    time:{time2-time1}")
                sys.stdout.flush()
        if save:
            with open("e.txt","w") as f:
                f.write(str(e))
def golden_ratio(number,show=True,la=100,save=False):
        a,b = 1,1
        decimal.getcontext().prec = number
        time1 = time.time()
        for i in range(number):
            time2 = time.time()
            a,b = b,a+b
            con = str(Decimal(a)/Decimal(b))
            if show:
                j = int((i+1)/(number)*la)*"█"
                jx = (la - int((i+1)/(number)*la))*"░"
                sys.stdout.write(f"\r第{i+1}次 共{number}次 {j}{jx}    time:{time2-time1}")
                sys.stdout.flush()
        if save:
            with open("黄金比例.txt","w") as f:
                f.write(str(Decimal(a)/Decimal(b)))
def pi(number,show=True,la=100,save=False):
        import time
        import sys
        if show:
            time1 = time.time()
            b = 10**(number+10)
            x1 = b*4//5
            x2 = b//-239
            he = x1+x2
            b = he
            for i in range(3,number*2,2):
                x1 //= -25
                x2 //= -57121
                x = (x1+x2)//i
                he += x
                if b == he:
                    break
                b = he
                j = int(((i-1)//2)/(number-1)*la)*"█"
                jx = (la - int(((i-1)//2)/(number-1)*la))*"░"
                sys.stdout.write(f"\r第{(i-1)//2}次 共{number-1}次 {j}{jx}")
                sys.stdout.flush()
            if save:
                with open("pi.txt","w") as f:
                    f.write(f"{str(he*4//10**10)[0]}.{str(he*4//10**10)[1:]}")
            print(f"    time:{time.time()-time1}s")
        else:
            time1 = time.time()
            b = 10**(number+10)
            x1 = b*4//5
            x2 = b//-239
            he = x1+x2
            b = he
            for i in range(3,number*2,2):
                x1 //= -25
                x2 //= -57121
                x = (x1+x2)//i
                he += x
                if b == he:
                    break
                b = he
            if save:
                with open("pi.txt","w") as f:
                    f.write(f"{str(he*4//10**10)[0]}.{str(he*4//10**10)[1:]}")
            print(f"\ntime:{time.time()-time1}s")
def root_of_any_number(number,root=2,save=False):
        time1 = time.time()
        getcontext().prec = number+1
        result = np.sqrt(Decimal(root))
        if save:
            with open(f"root {root}.txt","w") as f:
                f.write(str(result))
        time_end = time.time()
        print(f"root {root}\ntime:{time_end-time1}s")
        return result
with open("system.txt","r") as f:
    a = f.read()
a = a.split("\n")
la = int(a[0])
dict1 = eval(a[1])
ok = False
for i in range(5):
        if ok:
            break
        k = input("please enter your username:")
        if k in dict1.keys():
            for i in range(4):
                l = input("please enter your password:")
                if l == dict1[k]:
                    ok = True
                    break
                else:
                    print("Try again.")
        else:
            n = input("Register?")
            n = n.replace(" ","")
            n = n.replace(".","")
            if n.upper() == "YES,IAM" or n.upper() == "YES" or n.upper() == "Y" or n.upper() == "YES,I'M":
                user = input("please enter your username:")
                passw = input("please enter your password:")
                passwo = input("please enter your password again:")
                if passw == passwo:
                    dict1[user] = passw
                    with open("system.txt","w") as f:
                        f.write(str(la)+"\n"+str(dict1))
                    print("registered successfully.")
                    ok = True
                else:
                    print("fail to register.")
                    ok = False
go_in = True
while 1:
    if ok and go_in:
        while 1:
            n = input("Go in?\n")
            n = n.replace(" ","")
            n = n.replace(".","")
            if n.upper() == "YES,IAM" or n.upper() == "YES" or n.upper() == "Y" or n.upper() == "YES,I'M":
                go_in = True
                break
            elif n.upper() == "NO,IAMNOT" or n.upper() == "NO" or n.upper() == "N" or n.upper() == "NO,I'MNOT":
                go_in = False
                break
            else:
                print("I can't understand you.")
            
        if go_in:
            go_in = True
        else:
            n = input("Exit?\n")
            n = n.replace(" ","")
            n = n.replace(".","")
            if n.upper() == "YES,IAM" or n.upper() == "YES" or n.upper() == "Y" or n.upper() == "YES,I'M":
                pass
            elif n.upper() == "NO,IAMNOT" or n.upper() == "NO" or n.upper() == "N" or n.upper() == "NO,I'MNOT":
                go_in = True
            else:
                print("I can't understand you.")

        if go_in:
            n = input("Well,let's start.\n\nWhat do you need to calculate?\n(pi,golden_ratio,napierian_base,root_of_any_number)\nPlease choose one of them:")
            n = n.replace(" ","")
            n = n.replace("_","")
            n = n.replace(".","")
            if n.upper() == "PI":
                n = int(input("decimal digits:"))
                digits = n*1//1
                while 1:
                    n = input("Show process?\n")
                    n = n.replace(" ","")
                    n = n.replace(".","")
                    if n.upper() == "YES" or n.upper() == "Y":
                        show = True
                        break
                    elif n.upper() == "NO" or n.upper() == "N":
                        show = False
                        break
                    else:
                        print("I can't understand you.")
                while 1:
                    n = input("Save result?\n")
                    n = n.replace(" ","")
                    n = n.replace(".","")
                    if n.upper() == "YES" or n.upper() == "Y":
                        save = True
                        break
                    elif n.upper() == "NO" or n.upper() == "N":
                        save = False
                        break
                    else:
                        print("I can't understand you.")
                pi(digits,save=save,show=show,la=la)
            elif n.upper() == "GOLDENRATIO":
                n = int(input("decimal digits:"))
                digits = n*1//1
                while 1:
                    n = input("Show process?\n")
                    n = n.replace(" ","")
                    n = n.replace(".","")
                    if n.upper() == "YES" or n.upper() == "Y":
                        show = True
                        break
                    elif n.upper() == "NO" or n.upper() == "N":
                        show = False
                        break
                    else:
                        print("I can't understand you.")
                while 1:
                    n = input("Save result?\n")
                    n = n.replace(" ","")
                    n = n.replace(".","")
                    if n.upper() == "YES" or n.upper() == "Y":
                        save = True
                        break
                    elif n.upper() == "NO" or n.upper() == "N":
                        save = False
                        break
                    else:
                        print("I can't understand you.")
                golden_ratio(digits,save=save,show=show,la=la)
            elif n.upper() == "NAPIERIANBASE":
                n = int(input("decimal digits:"))
                digits = n*1//1
                while 1:
                    n = input("Show process?\n")
                    n = n.replace(" ","")
                    n = n.replace(".","")
                    if n.upper() == "YES" or n.upper() == "Y":
                        show = True
                        break
                    elif n.upper() == "NO" or n.upper() == "N":
                        show = False
                        break
                    else:
                        print("I can't understand you.")
                while 1:
                    n = input("Save result?\n")
                    n = n.replace(" ","")
                    n = n.replace(".","")
                    if n.upper() == "YES" or n.upper() == "Y":
                        save = True
                        break
                    elif n.upper() == "NO" or n.upper() == "N":
                        save = False
                        break
                    else:
                        print("I can't understand you.")
                napierian_base(digits,save=save,show=show,la=la)
            elif n.upper() == "ROOTOFANYNUMBER":
                root = int(input("root(a number):"))
                n = int(input("decimal digits:"))
                digits = n*1//1
                while 1:
                    n = input("Save result?\n")
                    n = n.replace(" ","")
                    n = n.replace(".","")
                    if n.upper() == "YES" or n.upper() == "Y":
                        save = True
                        break
                    elif n.upper() == "NO" or n.upper() == "N":
                        save = False
                        break
                    else:
                        print("I can't understand you.")
                root_of_any_number(digits,save=save,root=root)
            else:
                print("I can't understand you.")
    else:
        break